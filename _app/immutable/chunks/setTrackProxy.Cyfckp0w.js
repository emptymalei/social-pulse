const d=Symbol("Unset"),b=Symbol("IsSetTracked"),m=Symbol("GetModKeys"),h=Symbol("GetOwnKey"),P=Symbol("GetOwnPath"),y=Symbol("GetParent"),S=(r={},i={},s=void 0,e=void 0)=>{if(s&&!s[b])throw new Error("SetTracked parent must be SetTracked");const f=Object.assign(()=>{},i??{}),l=Object.keys(f),u=new Proxy(f,{get(c,t){switch(t){case d:return!(s!=null&&s[m].includes(e));case m:return l;case h:return e;case y:return s;case P:{const n=[e];let o=s;for(;o!==void 0;)n.unshift(o[h]),o=o[y];return n.join(".")}case b:return!0;case"toJSON":return()=>({...c});case"toString":case"toPrimitive":case Symbol.toPrimitive:return u[d]?e&&e in r?()=>r[e]:()=>"":i.toString.bind(i);default:return t in c||(c[t]=S(r,void 0,u,t)),c[t]}},set(c,t,n){return l.push(t),typeof n=="object"&&(n=S(r,n,u,t)),c[t]=n,!0}});return u},a=(r,...i)=>i.filter(e=>e==null?void 0:e[d]).length!==0;export{a as h,S as s};
